services:
  redis:
    image: redis:7
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio12345
      TZ: Europe/Madrid
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: ./srv
    command: uvicorn app:app --host 0.0.0.0 --port 8001
    environment:
      REDIS_URL: redis://redis:6379/0
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio12345
      MINIO_BUCKET: jobs
      SHARED_DIR: /shared
      MINIO_PUBLIC_URL: http://192.168.29.131:9000
      TZ: Europe/Madrid
    volumes:
      - ./srv:/app
      - shared-tmp:/shared
    depends_on:
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "8001:8001"
    restart: unless-stopped

  worker:
    build: ./srv
    command: celery -A worker.celery worker --loglevel=INFO --concurrency=2
    environment:
      REDIS_URL: redis://redis:6379/0
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio12345
      MINIO_BUCKET: jobs
      SHARED_DIR: /shared
      MINIO_PUBLIC_URL: http://192.168.29.131:9000
      TZ: Europe/Madrid
    volumes:
      - ./srv:/app
      - shared-tmp:/shared
    depends_on:
      api:
        condition: service_started
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

volumes:
  minio-data:
  shared-tmp: